from fpdf import FPDF
import os

class PDFReportAgent:
    def __init__(self, filename="report.pdf"):
        self.filename = filename
        self.pdf = FPDF()
        self.pdf.add_page()

        font_path = os.path.join("fonts", "DejaVuSans.ttf")
        self.pdf.add_font("DejaVu", "", font_path, uni=True)
        self.pdf.set_font("DejaVu", size=12)

    def _write_title(self, title):
        self.pdf.set_font("DejaVu", size=14)
        self.pdf.ln(5)
        self.pdf.set_text_color(0, 0, 128)
        self.pdf.cell(0, 10, txt=title, ln=True, align='L')
        self.pdf.set_text_color(0, 0, 0)
        self.pdf.set_font("DejaVu", size=12)
        self.pdf.ln(2)

    def _write_list_item(self, text):
        self.pdf.cell(10)  # indent
        self.pdf.multi_cell(0, 8, txt=f"‚Ä¢ {text}")
        self.pdf.ln(1)

    def generate(self, df, tavily_results=None):
        self._write_title(" “Æ–ª —Ö”©–¥–ª”©—Ö —Ö”©—Ä”©–Ω–≥–∏–π–Ω –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π —Ç–∞–π–ª–∞–Ω ")

        # 1. ”®—Ä”©”©–Ω–∏–π —Ç–æ–æ–≥–æ–æ—Ä –∞–Ω–≥–∏–ª—Å–∞–Ω –±–∞–π—Ä–Ω—ã —Ç–æ–æ
        self._write_title("1. ”®—Ä”©”©–Ω–∏–π —Ç–æ–æ–≥–æ–æ—Ä –∞–Ω–≥–∏–ª—Å–∞–Ω –±–∞–π—Ä–Ω—ã —Ç–æ–æ")
        room_counts = df['rooms'].value_counts(dropna=True).sort_index()
        for room, count in room_counts.items():
            self._write_list_item(f"{room} ”©—Ä”©”©—Ç—ç–π –Ω–∏–π—Ç {count} –±–∞–π—Ä –±–∞–π–Ω–∞.")

        # 2. ”®—Ä”©”© —Ç—É—Å –±“Ø—Ä–∏–π–Ω –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç
        self._write_title("2. ”®—Ä”©”© —Ç—É—Å –±“Ø—Ä–∏–π–Ω –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç (—Å–∞—è ‚ÇÆ)")
        avg_price_by_room = df.groupby('rooms')['price_mn'].mean().sort_index()
        for room, avg_price in avg_price_by_room.items():
            self._write_list_item(f"{room} ”©—Ä”©”©—Ç—ç–π –±–∞–π—Ä–Ω—ã –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç {avg_price:.1f} —Å–∞—è —Ç”©–≥—Ä”©–≥ –±–∞–π–Ω–∞.")

        # 3. –¶–æ–Ω—Ö–Ω—ã —Ç–æ–æ–≥–æ–æ—Ä –∞–Ω–≥–∏–ª—Å–∞–Ω –±–∞–π—Ä–Ω—ã —Ç–æ–æ
        self._write_title("3. –¶–æ–Ω—Ö–Ω—ã —Ç–æ–æ–≥–æ–æ—Ä –∞–Ω–≥–∏–ª—Å–∞–Ω –±–∞–π—Ä–Ω—ã —Ç–æ–æ")
        window_counts = df['Number_of_Windows'].value_counts(dropna=True).sort_index()
        for win, count in window_counts.items():
            self._write_list_item(f"{win} —Ü–æ–Ω—Ö—Ç–æ–π –Ω–∏–π—Ç {count} –±–∞–π—Ä –±“Ø—Ä—Ç–≥—ç–≥–¥—Å—ç–Ω –±–∞–π–Ω–∞.")

        # 4. –¶–æ–Ω—Ö–Ω—ã —Ç–æ–æ–Ω–¥ —Ç—É–ª–≥—É—É—Ä–ª–∞—Å–∞–Ω –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç
        self._write_title("4. –¶–æ–Ω—Ö–Ω—ã —Ç–æ–æ–Ω–¥ —Ç—É–ª–≥—É—É—Ä–ª–∞—Å–∞–Ω –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç")
        avg_price_by_window = df.groupby('Number_of_Windows')['price_mn'].mean().sort_index()
        for win, avg_price in avg_price_by_window.items():
            self._write_list_item(f"{win} —Ü–æ–Ω—Ö—Ç–æ–π –±–∞–π—Ä–Ω—ã –¥—É–Ω–¥–∞–∂ “Ø–Ω—ç {avg_price:.1f} —Å–∞—è —Ç”©–≥—Ä”©–≥ –±–∞–π–Ω–∞.")

        # 5. Tavily AI —Ö–∞–π–ª—Ç—ã–Ω —ç—Ö–Ω–∏–π 5 “Ø—Ä –¥“Ø–Ω
        self._write_title("5. Tavily AI —Ö–∞–π–ª—Ç—ã–Ω —ç—Ö–Ω–∏–π 5 “Ø—Ä –¥“Ø–Ω")
        if tavily_results:
            for i, res in enumerate(tavily_results[:5], 1):
                title = res.get("title", "–ì–∞—Ä—á–∏–≥ –±–∞–π—Ö–≥“Ø–π")
                url = res.get("url", "–•–æ–ª–±–æ–æ—Å –±–∞–π—Ö–≥“Ø–π")
                self._write_list_item(f"{i}. {title}\n   –•–æ–ª–±–æ–æ—Å: {url}")
        else:
            self._write_list_item("Tavily-–∞–∞—Å “Ø—Ä –¥“Ø–Ω –∏—Ä—ç—ç–≥“Ø–π –±–∞–π–Ω–∞.")

        self.pdf.output(self.filename)
        print(f"\nüìÑ –¢–∞–π–ª–∞–Ω PDF —Ñ–∞–π–ª –±–æ–ª–≥–æ–Ω —Ö–∞–¥–≥–∞–ª–∞–≥–¥–ª–∞–∞: {self.filename}")
